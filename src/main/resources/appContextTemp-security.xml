<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
     <!--<http auto-config="true"  use-expressions="true">
        <intercept-url pattern="/view/jsp/v1/**" access="permitAll" />
        <intercept-url pattern="/accessdenied" access="permitAll" />
        <intercept-url pattern="/travelapi/**" access="hasRole('ROLE_VENDOR')" />
        <form-login login-page="/travelapi/city/login" default-target-url="/list" authentication-failure-url="/travelapi/city/login?error=true" />
        <logout logout-success-url="/view/jsp/v1/403.jsp" />
    </http>-->

    <http auto-config="true" use-expressions="true">
		<intercept-url pattern="/travelapi/city/**" access="hasRole('ROLE_VENDOR')" />
		<form-login login-page="/view/jsp/v1/login.jsp" authentication-success-handler-ref="/travelapi/login/" authentication-failure-url="/travelapi/city/login?error=true" />
 	</http>
 
 
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select email,password from users where email=?"
		  authorities-by-username-query=
		    "select email, role from users where email=?  " />
	  </authentication-provider>
	</authentication-manager>
 
</beans:beans>